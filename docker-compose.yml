version: '3'

networks:
  main:

services:
  proxy:
    networks:
      main:
        aliases:
          - "${PROXY_URL}"
    container_name: "${PROXY_URL}"
    image: jwilder/nginx-proxy:alpine
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - "${HTTP_PORT}:${HTTP_PORT}"
      - "${HTTPS_PORT}:${HTTPS_PORT}"

  db:
    depends_on:
      proxy:
        condition: service_started
    networks:
      main:
        aliases:
          - "${DB_URL}"
    container_name: "${DB_URL}"
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment: 
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_DB: "${DB_DATABASE}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"

  api:
    depends_on:
      db:
        condition: service_started
    networks:
      main:
        aliases:
          - "${API_URL}"
    build:
      context: ./api
    container_name: "${API_URL}"
    volumes:
      - "./api:/usr/app"
    ports:
      - "5000:${API_PORT}"
    environment:
      TZ: "${TZ}"
      VIRTUAL_HOST: "${API_URL}"
      VIRTUAL_PORT: "${API_PORT}"
      API_URL: "${API_URL}"
      PORT: "${API_PORT}"
      APP_ENV: "${ENVIRONMENT}"
      NODE_ENV: "${ENVIRONMENT}"
      TOKEN_SECRET: "${TOKEN_SECRET}"
      EMAIL_FROM: "${EMAIL_FROM}"
      SPA_URL: "${SPA_URL}"
      DB_DRIVER: "${DB_DRIVER}"
      DB_PORT: "${DB_PORT}"
      DB_HOST: "${DB_URL}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_DATABASE: "${DB_DATABASE}"
      DEBUG: "true"

  spa:
    depends_on:
      api:
        condition: service_started
    networks:
      main:
        aliases:
          - "${SPA_URL}"
    build: 
      context: ./spa
    container_name: "${SPA_URL}"
    volumes:
      - "./spa:/usr/app"
    ports:
      - "${HTTP_PORT}"
    environment:
      VIRTUAL_HOST: "${SPA_URL}"
      VIRTUAL_PORT: "${HTTP_PORT}"
      PORT: "${HTTP_PORT}"
      APP_ENV: "${ENVIRONMENT}"
      NODE_ENV: "${ENVIRONMENT}"
      API_URL: "${API_URL}"
      WS_URL: "ws://${API_URL}/graphql"
      DEBUG: "true"
